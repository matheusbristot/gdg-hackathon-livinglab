apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion rootProject.ext.target_version
    buildToolsVersion rootProject.ext.build_version
    defaultConfig {
        applicationId "com.hackaton.notice"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_version
        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'notice'
            keyPassword '*UTZ%5v.,Dp)^53jtF#*Nfjq,v'
            storeFile file('../keystore/keystore.jks')
            storePassword '*UTZ%5v.,Dp)^53jtF#*Nfjq,v'
        }
    }


    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            initWith(buildTypes.release)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "\"Hackaton Notice\""
        }

        staging {
            applicationIdSuffix ".staging"
            resValue "string", "app_name", "\"Hackaton Notice [staging]\""
        }

        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "\"Hackaton Notice [debug]\""
        }
    }
}

dependencies {
    def lifecycle_version = "1.1.1"
    def support_version = "28.0.0-rc01"
    def anko_version='0.10.4'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':domain')
    implementation project(':data')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    implementation "com.android.support:design:$support_version"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"

    // Multidex
    implementation 'com.android.support:multidex:1.0.3'

    //RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.google.firebase:firebase-crash:16.2.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'
    implementation 'com.google.firebase:firebase-database:16.0.1'

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

apply plugin: 'com.google.gms.google-services'
